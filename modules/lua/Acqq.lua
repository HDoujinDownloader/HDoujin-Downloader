function Register()

    module.Name = '腾讯'
    module.Language = 'Chinese'

    module.Domains.Add('ac.qq.com')

end

function GetInfo()

    info.Title = dom.SelectValue('//h2/strong')
    info.Author = dom.SelectValue('//span[contains(text(),"作者")]/em')
    info.Summary = dom.SelectValue('//p[contains(@class,"works-intro-short")]')

end

function GetChapters()

    chapters.AddRange(dom.SelectElements('//span[contains(@class,"works-chapter-item")]/a'))

end

function GetPages()

    -- Get the nonce from the webpage, which is generated by minorly obfuscated JavaScript.

    local nonceJs = dom.SelectValue('//script[contains(text(), "window[")]')
    nonceJs = RegexReplace(nonceJs, '(?:window|document)\\.\\w+(?:\\(.+?\\))?', 'true')

    local javaScript = JavaScript.New()

    javaScript.Execute('window = {};')
    javaScript.Execute(nonceJs)

    -- The nonce is used to strip invalid characters from the base64-encoded string that contains the pages.
    -- The script that handles this is in "ac.page.chapter.view_v2.5.0.js", where it is obfsucated (packer).

    local chapterViewJs = http.Get(dom.SelectValue('//script[contains(@src,"chapter.view")]/@src'))
    local deobfuscationJs = chapterViewJs:regex('(eval\\(function\\(p,a,c,k,e,r\\){.+?)}\\(\\);', 1)
    local dataJs = dom.SelectValue('//script[contains(text(), "DATA")]')

    javaScript.Execute(dataJs)
    javaScript.Execute('W = { DATA: DATA, nonce: window["nonce"] };')
    javaScript.Execute(deobfuscationJs)

    local pagesJson = javaScript.GetObject('_v').ToJson()

    pages.AddRange(pagesJson.SelectValues('picture[*].url'))

end
